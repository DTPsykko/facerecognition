{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","alt","src","width","height","sss","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","tilt_default","options","max","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","SignIn","htmlFor","name","value","href","Register","app","Clarifai","App","apiKey","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","react_tsparticles_default","init","main","loaded","container","background","color","fpsLimit","interactivity","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","collisions","move","direction","outMode","random","speed","straight","number","density","area","shape","detectRetina","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Component","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.e8200ceb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.935bb6a8.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\t    if (isSignedIn) {\r\n\t    \treturn (\r\n\t\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t\t</nav>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t    );\r\n\t\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'sss/>\r\n\t\t\t\t<div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png'\r\nimport './Logo.css'; \r\n\r\nconst Logo = () => {\r\n\treturn (\r\n    \t<div className='ma4 mt0'>\r\n    \t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 35 }} style={{ height: 125, width: 125 }}>\r\n    \t\t\t<div className=\"Tilt-inner pa3\"><img style={{paddingTop: '5px'}} alt='logo' src={brain}/></div>\r\n    \t\t</Tilt>\r\n    \t</div>\r\n    \t);\r\n\t};\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n    \t<div>\r\n    \t\t<p className= 'f3'>\r\n    \t\t{'This Magic Brain will detect all faces displayed on your picture. Try it out'}\r\n    \t\t</p>\r\n    \t\t<div className='center'>\r\n    \t\t\t<div className=' form center pa4 br3 shadow-5'>\r\n    \t\t\t\t<input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n    \t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n    \t\t\t</div>\r\n    \t\t</div>\r\n    \t</div>\r\n    \t);\r\n\t};\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n    \t<div>\r\n    \t\t<div className='white f3'>\r\n    \t\t{'null, your current rank is...'}\r\n    \t\t</div>\r\n    \t\t<div className='white f1'>\r\n    \t\t{'#null'}\r\n    \t\t</div>\r\n    \t</div>\r\n    \t);\r\n\t};\r\nexport default Rank;","import React from 'react';\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n\treturn (\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      \tonClick={() => onRouteChange('home')}\r\n\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t      \ttype=\"submit\"\r\n\t\t\t      \tvalue=\"Sign in\"/>\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t      <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\r\n\r\n\t);\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n\treturn (\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Email</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      \tonClick={() => onRouteChange('signin')}\r\n\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t      \ttype=\"submit\"\r\n\t\t\t      \tvalue=\"Register\"/>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\r\n\r\n\t);\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from \"react-tsparticles\";\nimport './App.css';\nimport Clarifai from 'clarifai';\n\n\nconst app = new Clarifai.App({\n  apiKey: '0efc0e6b1c984f15a14654bf074d2109'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width -(clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box: box});\n  }\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n  render() {\n    const particlesInit = (main) => {\n      // console.log(main);\n    };\n    const particlesLoaded = (container) => {\n      // console.log(container)\n    };\n    return (\n      <div className=\"App\">\n        <Particles\n          className='particles'\n          id=\"tsparticles\"\n          init={particlesInit}\n          loaded={particlesLoaded}\n          options={{\n            background: {\n              color: {\n                value: \"#FF5EDF1\",\n              },\n            },\n            fpsLimit: 120,\n            interactivity: {\n              events: {\n                onClick: {\n                  enable: false,\n                  mode: \"push\",\n                },\n                onHover: {\n                  enable: true,\n                  mode: \"repulse\",\n                },\n                resize: true,\n              },\n              modes: {\n                bubble: {\n                  distance: 400,\n                  duration: 2,\n                  opacity: 0.8,\n                  size: 40,\n                },\n                push: {\n                  quantity: 8,\n                },\n                repulse: {\n                  distance: 200,\n                  duration: 0.6,\n                },\n              },\n            },\n            particles: {\n              color: {\n                value: \"#ffffff\",\n              },\n              links: {\n                color: \"#ffffff\",\n                distance: 150,\n                enable: true,\n                opacity: 0.5,\n                width: 1,\n              },\n              collisions: {\n                enable: false,\n              },\n              move: {\n                direction: \"none\",\n                enable: true,\n                outMode: \"bounce\",\n                random: false,\n                speed: 3,\n                straight: false,\n              },\n              number: {\n                density: {\n                  enable: true,\n                  area: 800,\n                },\n                value: 80,\n              },\n              opacity: {\n                value: 0.5,\n              },\n              shape: {\n                type: \"circle\",\n              },\n              size: {\n                random: true,\n                value: 5,\n              },\n            },\n            detectRetina: true,\n          }}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home' \n        ? <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n          </div>\n        : (\n           this.state.route === 'signin' \n           ? <SignIn onRouteChange={this.onRouteChange}/>\n           : <Register onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  };\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}